Return-Path: <linux-rpi-kernel-bounces+lists+linux-rpi-kernel=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-rpi-kernel@lfdr.de
Delivered-To: lists+linux-rpi-kernel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id A75D2AFAED
	for <lists+linux-rpi-kernel@lfdr.de>; Wed, 11 Sep 2019 12:57:04 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:To:MIME-Version:Subject:Date:From:
	References:In-Reply-To:Message-Id:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=QgbzENnJlEorrWNDnLBvcHTfTh1d60299DKD6ivN2f8=; b=qzz3+9dWUbouUO
	TC+6shOyvsVOfTzJNWCBM4ceKSQRGnfpOpwoMWhVld+0M3PFUQe1PFLYyud4674st9v29QlxS4yxL
	aUV2sISdxNi8UMp2l5q191V5MslwcPDDbkeyd9ysA4brukge//ACPlUAw7cK8VIoPIYFB1k46kCk3
	3NPrvqVvOLDEAQ1htj2iXg7yqQp4EIVWc4wHTYAnu+D+SaWrthG6kiApblivqYfX5URQuyvmtqCrK
	W8bZvyTIT1lK198IBvpazfP15iaXMPtXC5SDZcmdtCquRqUgOyErynlr3mCLWPc/cEnX7M/J4pri2
	WNdAqwuHsLi5WYL7preg==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92 #3 (Red Hat Linux))
	id 1i80Iy-0008Sd-1J; Wed, 11 Sep 2019 10:56:56 +0000
Received: from mailout2.hostsharing.net ([83.223.78.233])
 by bombadil.infradead.org with esmtps (Exim 4.92 #3 (Red Hat Linux))
 id 1i80It-0008QE-QD
 for linux-rpi-kernel@lists.infradead.org; Wed, 11 Sep 2019 10:56:54 +0000
Received: from h08.hostsharing.net (h08.hostsharing.net [83.223.95.28])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (Client CN "*.hostsharing.net",
 Issuer "COMODO RSA Domain Validation Secure Server CA" (not verified))
 by mailout2.hostsharing.net (Postfix) with ESMTPS id 8B0B510189E05;
 Wed, 11 Sep 2019 12:56:50 +0200 (CEST)
Received: from localhost (p57BD772B.dip0.t-ipconnect.de [87.189.119.43])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits))
 (No client certificate requested)
 by h08.hostsharing.net (Postfix) with ESMTPSA id 40C166124A1A;
 Wed, 11 Sep 2019 12:56:50 +0200 (CEST)
X-Mailbox-Line: From 874949385f28251e2dcaa9494e39a27b50e9f9e4 Mon Sep 17
 00:00:00 2001
Message-Id: <874949385f28251e2dcaa9494e39a27b50e9f9e4.1568187525.git.lukas@wunner.de>
In-Reply-To: <cover.1568187525.git.lukas@wunner.de>
References: <cover.1568187525.git.lukas@wunner.de>
From: Lukas Wunner <lukas@wunner.de>
Date: Wed, 11 Sep 2019 12:15:30 +0200
Subject: [PATCH v2 07/10] spi: bcm2835: Speed up TX-only DMA transfers by
 clearing RX FIFO
MIME-Version: 1.0
To: Mark Brown <broonie@kernel.org>
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20190911_035652_169032_20ED541E 
X-CRM114-Status: GOOD (  26.42  )
X-Spam-Score: 0.0 (/)
X-Spam-Report: SpamAssassin version 3.4.2 on bombadil.infradead.org summary:
 Content analysis details:   (0.0 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 0.0 SPF_NONE               SPF: sender does not publish an SPF Record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
X-BeenThere: linux-rpi-kernel@lists.infradead.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <linux-rpi-kernel.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-rpi-kernel>, 
 <mailto:linux-rpi-kernel-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-rpi-kernel/>
List-Post: <mailto:linux-rpi-kernel@lists.infradead.org>
List-Help: <mailto:linux-rpi-kernel-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-rpi-kernel>, 
 <mailto:linux-rpi-kernel-request@lists.infradead.org?subject=subscribe>
Cc: linux-rpi-kernel@lists.infradead.org, linux-spi@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-rpi-kernel" <linux-rpi-kernel-bounces@lists.infradead.org>
Errors-To: linux-rpi-kernel-bounces+lists+linux-rpi-kernel=lfdr.de@lists.infradead.org

VGhlIEJDTTI4MzUgU1BJIGRyaXZlciBjdXJyZW50bHkgc2V0cyB0aGUgU1BJX0NPTlRST0xMRVJf
TVVTVF9SWCBmbGFnLgpXaGVuIHBlcmZvcm1pbmcgYSBUWC1vbmx5IHRyYW5zZmVyLCB0aGlzIGZs
YWcgY2F1c2VzIHRoZSBTUEkgY29yZSB0bwphbGxvY2F0ZSBhbmQgRE1BLW1hcCBhIGR1bW15IGJ1
ZmZlciBpbnRvIHdoaWNoIHRoZSBSWCBGSUZPIGNvbnRlbnRzIGFyZQpjb3BpZWQuICBUaGUgZHVt
bXkgYnVmZmVyIGlzIG5lY2Vzc2FyeSBiZWNhdXNlIHRoZSBjaGlwIGlzIG5vdCBjYXBhYmxlCm9m
IGRpc2FibGluZyB0aGUgcmVjZWl2ZXIgb3IgYXV0b21hdGljYWxseSB0aHJvd2luZyBhd2F5IHJl
Y2VpdmVkIGRhdGEuCk5vdCByZWFkaW5nIHRoZSBSWCBGSUZPIGlzbid0IGFuIG9wdGlvbiBlaXRo
ZXIgc2luY2UgdHJhbnNtaXNzaW9uIGlzCmhhbHRlZCBvbmNlIGl0J3MgZnVsbC4KCkF2b2lkIHRo
ZSBvdmVyaGVhZCBpbmR1Y2VkIGJ5IHRoZSBkdW1teSBidWZmZXIgYnkgcHJlYWxsb2NhdGluZyBh
CnJldXNhYmxlIERNQSB0cmFuc2FjdGlvbiB3aGljaCBjeWNsaWNhbGx5IGNsZWFycyB0aGUgUlgg
RklGTy4gIFRoZQp0cmFuc2FjdGlvbiByZXF1aXJlcyB2ZXJ5IGxpdHRsZSBDUFUgdGltZSB0byBz
dWJtaXQgYW5kIGdlbmVyYXRlcyBubwppbnRlcnJ1cHRzIHdoaWxlIHJ1bm5pbmcuICBTcGVjaWZp
Y3MgYXJlIHByb3ZpZGVkIGluIGtlcm5lbGRvYyBjb21tZW50cy4KCldpdGggYSBrczg4NTEgRXRo
ZXJuZXQgY2hpcCBhdHRhY2hlZCB0byB0aGUgU1BJIGNvbnRyb2xsZXIsIEkgYW0gc2VlaW5nCmEg
MzAgdXMgcmVkdWN0aW9uIGluIHBpbmcgdGltZSB3aXRoIHRoaXMgY29tbWl0ICgxLjgxOSBtcyB2
cy4gMS44NDkgbXMsCmF2ZXJhZ2Ugb2YgMTAwLDAwMCBwYWNrZXRzKSBhcyB3ZWxsIGFzIGEgMiUg
cmVkdWN0aW9uIGluIENQVSB0aW1lCig3NTowOCB2cy4gNzY6MzkgZm9yIHRyYW5zbWlzc2lvbiBv
ZiA1IEdCeXRlIG92ZXIgdGhlIFNQSSBidXMpLgoKVGhlIGNvbW1pdCB1c2VzIHRoZSBUWCBETUEg
aW50ZXJydXB0IHRvIHNpZ25hbCBjb21wbGV0aW9uIG9mIGEgdHJhbnNmZXIuClRoaXMgaW50ZXJy
dXB0IGlzIHJhaXNlZCBvbmNlIGFsbCBieXRlcyBoYXZlIGJlZW4gd3JpdHRlbiB0byB0aGUKVFgg
RklGTyBhbmQgaXQgaXMgdGhlbiBuZWNlc3NhcnkgdG8gYnVzeS13YWl0IGZvciB0aGUgVFggRklG
TyB0byBiZWNvbWUKZW1wdHkgYmVmb3JlIHRoZSB0cmFuc2ZlciBjYW4gYmUgZmluYWxpemVkLiAg
QXMgYW4gYWx0ZXJuYXRpdmUgYXBwcm9hY2gsCkkgaGF2ZSBleHBsb3JlZCB1c2luZyB0aGUgU1BJ
IGNvbnRyb2xsZXIncyBET05FIGludGVycnVwdCB0byBkZXRlY3QKY29tcGxldGlvbi4gIFRoaXMg
aW50ZXJydXB0IGlzIHNpZ25hbGVkIHdoZW4gdGhlIFRYIEZJRk8gYmVjb21lcyBlbXB0eSwKYXZv
aWRpbmcgdGhlIG5lZWQgdG8gYnVzeS13YWl0LiAgSG93ZXZlciBsYXRlbmN5IGRldGVyaW9yYXRl
cyBjb21wYXJlZAp0byB0aGUgcHJlc2VudCBjb21taXQgYW5kIHN1cnByaXNpbmdseSwgQ1BVIHRp
bWUgaXMgc2xpZ2h0bHkgaGlnaGVyIGFzCndlbGw6CgpJdCB0dXJucyBvdXQgdGhhdCBpbiA0NSUg
b2YgdGhlIGNhc2VzLCBubyBidXN5LXdhaXRpbmcgaXMgbmVlZGVkIGF0IGFsbAphbmQgaW4gNzYl
IG9mIHRoZSBjYXNlcywgbGVzcyB0aGFuIDEwIGJ1c3ktd2FpdCBpdGVyYXRpb25zIGFyZQpzdWZm
aWNpZW50IGZvciB0aGUgVFggRklGTyB0byBkcmFpbi4gIFRoaXMgd2FzIG1lYXN1cmVkIG9uIGFu
IFJUIGtlcm5lbC4KT24gYSB2YW5pbGxhIGtlcm5lbCwgd2FrZXVwIGxhdGVuY3kgaXMgd29yc2Ug
YW5kIHRodXMgZmV3ZXIgaXRlcmF0aW9ucwphcmUgbmVlZGVkLiAgVGhlIG1lYXN1cmVtZW50cyB3
ZXJlIG1hZGUgd2l0aCBhbiBTUEkgY2xvY2sgb2YgMjAgTUh6LAp0aGV5IG1heSBkaWZmZXIgc2xp
Z2h0bHkgZm9yIHNsb3dlciBvciBmYXN0ZXIgY2xvY2sgc3BlZWRzLgoKUHJldmlvdXNseSB3ZSBh
bHdheXMgdXNlZCB0aGUgUlggRE1BIGludGVycnVwdCB0byBzaWduYWwgY29tcGxldGlvbiBvZiBh
CnRyYW5zZmVyLiAgVXNpbmcgdGhlIFRYIERNQSBpbnRlcnJ1cHQgbm93IGludHJvZHVjZXMgYSBy
YWNlIGNvbmRpdGlvbjoKVFggRE1BIGlzIGFsd2F5cyBzdGFydGVkIGJlZm9yZSBSWCBETUEgc28g
dGhhdCBieXRlcyBhcmUgYWxyZWFkeSBjbG9ja2VkCm91dCB3aGlsZSBSWCBETUEgaXMgc3RpbGwg
YmVpbmcgc2V0IHVwLiAgQnV0IGlmIGEgVFgtb25seSB0cmFuc2ZlciBpcwp2ZXJ5IHNob3J0LCB0
aGVuIHRoZSBUWCBETUEgaW50ZXJydXB0IG1heSBvY2N1ciBiZWZvcmUgUlggRE1BIGlzIHNldCB1
cC4KSWYgdGhlIGludGVycnVwdCBoYXBwZW5zIHRvIG9jY3VyIG9uIHRoZSBzYW1lIENQVSwgc2V0
dXAgb2YgUlggRE1BIG1heQpldmVuIGJlIGRlbGF5ZWQgdW50aWwgYWZ0ZXIgdGhlIGludGVycnVw
dCB3YXMgaGFuZGxlZC4KCkkndmUgc29sdmVkIHRoaXMgYnkgaGF2aW5nIHRoZSBUWCBETUEgY2Fs
bGJhY2sgY2xlYXIgdGhlIFJYIEZJRk8gd2hpbGUKYnVzeS13YWl0aW5nIGZvciB0aGUgVFggRklG
TyB0byBkcmFpbiwgdGh1cyBhdm9pZGluZyBhIGRlcGVuZGVuY3kgb24Kc2V0dXAgb2YgUlggRE1B
LiAgQWRkaXRpb25hbGx5LCBJIGFtIHVzaW5nIGEgbG9jay1mcmVlIG1lY2hhbmlzbSB3aXRoCnR3
byBmbGFncywgdHhfZG1hX2FjdGl2ZSBhbmQgcnhfZG1hX2FjdGl2ZSBwbHVzIG1lbW9yeSBiYXJy
aWVycyB0bwp0ZXJtaW5hdGUgUlggRE1BIGVpdGhlciBieSB0aGUgVFggRE1BIGNhbGxiYWNrIG9y
IGltbWVkaWF0ZWx5IGFmdGVyCnNldHRpbmcgaXQgdXAsIHdoaWNoZXZlciB3aW5zIHRoZSByYWNl
LiAgSSd2ZSBleHBsb3JlZCBhbiBhbHRlcm5hdGl2ZQphcHByb2FjaCB3aGljaCB0ZW1wb3Jhcmls
eSBkaXNhYmxlcyB0aGUgVFggRE1BIGNhbGxiYWNrIHVudGlsIFJYIERNQQpoYXMgYmVlbiBzZXQg
dXAgKHVzaW5nIHRhc2tsZXRfZGlzYWJsZSgpLCBsb2NhbF9iaF9kaXNhYmxlKCkgb3IKbG9jYWxf
aXJxX3NhdmUoKSksIGJ1dCB0aGUgcGVyZm9ybWFuY2Ugd2FzIG1pbmltYWxseSB3b3JzZS4KCltO
YXRoYW4gQ2hhbmNlbGxvciBjb250cmlidXRlZCBhIERNQSBtYXBwaW5nIGZpeHVwIGZvciBhbiBl
YXJseSB2ZXJzaW9uCm9mIHRoaXMgY29tbWl0LCBoZW5jZSBoaXMgU2lnbmVkLW9mZi1ieS5dCgpU
ZXN0ZWQtYnk6IE51bm8gU8OhIDxudW5vLnNhQGFuYWxvZy5jb20+ClRlc3RlZC1ieTogTm9yYWxm
IFRyw7hubmVzIDxub3JhbGZAdHJvbm5lcy5vcmc+ClNpZ25lZC1vZmYtYnk6IE5hdGhhbiBDaGFu
Y2VsbG9yIDxuYXRlY2hhbmNlbGxvckBnbWFpbC5jb20+ClNpZ25lZC1vZmYtYnk6IEx1a2FzIFd1
bm5lciA8bHVrYXNAd3VubmVyLmRlPgpBY2tlZC1ieTogU3RlZmFuIFdhaHJlbiA8d2FocmVuc3RA
Z214Lm5ldD4KQWNrZWQtYnk6IE1hcnRpbiBTcGVybCA8a2VybmVsQG1hcnRpbi5zcGVybC5vcmc+
CkNjOiBSb2JlcnQgSmFyem1payA8cm9iZXJ0LmphcnptaWtAZnJlZS5mcj4KLS0tCiBkcml2ZXJz
L3NwaS9zcGktYmNtMjgzNS5jIHwgMjQxICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KystLS0tCiAxIGZpbGUgY2hhbmdlZCwgMjE4IGluc2VydGlvbnMoKyksIDIzIGRlbGV0aW9ucygt
KQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvc3BpL3NwaS1iY20yODM1LmMgYi9kcml2ZXJzL3NwaS9z
cGktYmNtMjgzNS5jCmluZGV4IGUzMGU0YWZjZjVmNy4uYjdjZjBiNmE1ZDY1IDEwMDY0NAotLS0g
YS9kcml2ZXJzL3NwaS9zcGktYmNtMjgzNS5jCisrKyBiL2RyaXZlcnMvc3BpL3NwaS1iY20yODM1
LmMKQEAgLTEwNiw2ICsxMDYsMTYgQEAgTU9EVUxFX1BBUk1fREVTQyhwb2xsaW5nX2xpbWl0X3Vz
LAogICogICAgICBUaGVzZSBhcmUgY291bnRlZCBhcyB3ZWxsIGluIEBjb3VudF90cmFuc2Zlcl9w
b2xsaW5nIGFuZAogICogICAgICBAY291bnRfdHJhbnNmZXJfaXJxCiAgKiBAY291bnRfdHJhbnNm
ZXJfZG1hOiBjb3VudCBob3cgb2Z0ZW4gZG1hIG1vZGUgaXMgdXNlZAorICogQGNoaXBfc2VsZWN0
OiBTUEkgc2xhdmUgY3VycmVudGx5IHNlbGVjdGVkCisgKgkodXNlZCBieSBiY20yODM1X3NwaV9k
bWFfdHhfZG9uZSgpIHRvIHdyaXRlIEBjbGVhcl9yeF9jcykKKyAqIEB0eF9kbWFfYWN0aXZlOiB3
aGV0aGVyIGEgVFggRE1BIGRlc2NyaXB0b3IgaXMgaW4gcHJvZ3Jlc3MKKyAqIEByeF9kbWFfYWN0
aXZlOiB3aGV0aGVyIGEgUlggRE1BIGRlc2NyaXB0b3IgaXMgaW4gcHJvZ3Jlc3MKKyAqCSh1c2Vk
IGJ5IGJjbTI4MzVfc3BpX2RtYV90eF9kb25lKCkgdG8gaGFuZGxlIGEgcmFjZSkKKyAqIEBjbGVh
cl9yeF9kZXNjOiBwcmVhbGxvY2F0ZWQgUlggRE1BIGRlc2NyaXB0b3IgdXNlZCBmb3IgVFgtb25s
eSB0cmFuc2ZlcnMKKyAqCShjeWNsaWNhbGx5IGNsZWFycyBSWCBGSUZPIGJ5IHdyaXRpbmcgQGNs
ZWFyX3J4X2NzIHRvIENTIHJlZ2lzdGVyKQorICogQGNsZWFyX3J4X2FkZHI6IGJ1cyBhZGRyZXNz
IG9mIEBjbGVhcl9yeF9jcworICogQGNsZWFyX3J4X2NzOiBwcmVjYWxjdWxhdGVkIENTIHJlZ2lz
dGVyIHZhbHVlIHRvIGNsZWFyIFJYIEZJRk8KKyAqCSh1c2VzIHNsYXZlLXNwZWNpZmljIGNsb2Nr
IHBvbGFyaXR5IGFuZCBwaGFzZSBzZXR0aW5ncykKICAqLwogc3RydWN0IGJjbTI4MzVfc3BpIHsK
IAl2b2lkIF9faW9tZW0gKnJlZ3M7CkBAIC0xMjYsNiArMTM2LDEzIEBAIHN0cnVjdCBiY20yODM1
X3NwaSB7CiAJdTY0IGNvdW50X3RyYW5zZmVyX2lycTsKIAl1NjQgY291bnRfdHJhbnNmZXJfaXJx
X2FmdGVyX3BvbGxpbmc7CiAJdTY0IGNvdW50X3RyYW5zZmVyX2RtYTsKKworCXU4IGNoaXBfc2Vs
ZWN0OworCXVuc2lnbmVkIGludCB0eF9kbWFfYWN0aXZlOworCXVuc2lnbmVkIGludCByeF9kbWFf
YWN0aXZlOworCXN0cnVjdCBkbWFfYXN5bmNfdHhfZGVzY3JpcHRvciAqY2xlYXJfcnhfZGVzY1tC
Q00yODM1X1NQSV9OVU1fQ1NdOworCWRtYV9hZGRyX3QgY2xlYXJfcnhfYWRkcjsKKwl1MzIgY2xl
YXJfcnhfY3NbQkNNMjgzNV9TUElfTlVNX0NTXSBfX19fY2FjaGVsaW5lX2FsaWduZWQ7CiB9Owog
CiAjaWYgZGVmaW5lZChDT05GSUdfREVCVUdfRlMpCkBAIC00NjIsNyArNDc5LDcgQEAgc3RhdGlj
IHZvaWQgYmNtMjgzNV9zcGlfdHJhbnNmZXJfcHJvbG9ndWUoc3RydWN0IHNwaV9jb250cm9sbGVy
ICpjdGxyLAogCWlmICghc2dfaXNfbGFzdCgmdGZyLT50eF9zZy5zZ2xbMF0pKQogCQlicy0+dHhf
cHJvbG9ndWUgPSBzZ19kbWFfbGVuKCZ0ZnItPnR4X3NnLnNnbFswXSkgJiAzOwogCi0JaWYgKCFz
Z19pc19sYXN0KCZ0ZnItPnJ4X3NnLnNnbFswXSkpIHsKKwlpZiAoYnMtPnJ4X2J1ZiAmJiAhc2df
aXNfbGFzdCgmdGZyLT5yeF9zZy5zZ2xbMF0pKSB7CiAJCWJzLT5yeF9wcm9sb2d1ZSA9IHNnX2Rt
YV9sZW4oJnRmci0+cnhfc2cuc2dsWzBdKSAmIDM7CiAKIAkJaWYgKGJzLT5yeF9wcm9sb2d1ZSA+
IGJzLT50eF9wcm9sb2d1ZSkgewpAQCAtNTU3LDcgKzU3NCwxMyBAQCBzdGF0aWMgdm9pZCBiY20y
ODM1X3NwaV91bmRvX3Byb2xvZ3VlKHN0cnVjdCBiY20yODM1X3NwaSAqYnMpCiAJYnMtPnR4X3By
b2xvZ3VlID0gMDsKIH0KIAotc3RhdGljIHZvaWQgYmNtMjgzNV9zcGlfZG1hX2RvbmUodm9pZCAq
ZGF0YSkKKy8qKgorICogYmNtMjgzNV9zcGlfZG1hX3J4X2RvbmUoKSAtIGNhbGxiYWNrIGZvciBE
TUEgUlggY2hhbm5lbAorICogQGRhdGE6IFNQSSBtYXN0ZXIgY29udHJvbGxlcgorICoKKyAqIFVz
ZWQgZm9yIGJpZGlyZWN0aW9uYWwgYW5kIFJYLW9ubHkgdHJhbnNmZXJzLgorICovCitzdGF0aWMg
dm9pZCBiY20yODM1X3NwaV9kbWFfcnhfZG9uZSh2b2lkICpkYXRhKQogewogCXN0cnVjdCBzcGlf
Y29udHJvbGxlciAqY3RsciA9IGRhdGE7CiAJc3RydWN0IGJjbTI4MzVfc3BpICpicyA9IHNwaV9j
b250cm9sbGVyX2dldF9kZXZkYXRhKGN0bHIpOwpAQCAtNTcxLDE0ICs1OTQsNjEgQEAgc3RhdGlj
IHZvaWQgYmNtMjgzNV9zcGlfZG1hX2RvbmUodm9pZCAqZGF0YSkKIAkgKiBzaXR1YXRpb24gb3Ro
ZXJ3aXNlLi4uCiAJICovCiAJZG1hZW5naW5lX3Rlcm1pbmF0ZV9hc3luYyhjdGxyLT5kbWFfdHgp
OworCWJzLT50eF9kbWFfYWN0aXZlID0gZmFsc2U7CisJYnMtPnJ4X2RtYV9hY3RpdmUgPSBmYWxz
ZTsKIAliY20yODM1X3NwaV91bmRvX3Byb2xvZ3VlKGJzKTsKIAogCS8qIGFuZCBtYXJrIGFzIGNv
bXBsZXRlZCAqLzsKIAljb21wbGV0ZSgmY3Rsci0+eGZlcl9jb21wbGV0aW9uKTsKIH0KIAorLyoq
CisgKiBiY20yODM1X3NwaV9kbWFfdHhfZG9uZSgpIC0gY2FsbGJhY2sgZm9yIERNQSBUWCBjaGFu
bmVsCisgKiBAZGF0YTogU1BJIG1hc3RlciBjb250cm9sbGVyCisgKgorICogVXNlZCBmb3IgVFgt
b25seSB0cmFuc2ZlcnMuCisgKi8KK3N0YXRpYyB2b2lkIGJjbTI4MzVfc3BpX2RtYV90eF9kb25l
KHZvaWQgKmRhdGEpCit7CisJc3RydWN0IHNwaV9jb250cm9sbGVyICpjdGxyID0gZGF0YTsKKwlz
dHJ1Y3QgYmNtMjgzNV9zcGkgKmJzID0gc3BpX2NvbnRyb2xsZXJfZ2V0X2RldmRhdGEoY3Rscik7
CisKKwkvKiBidXN5LXdhaXQgZm9yIFRYIEZJRk8gdG8gZW1wdHkgKi8KKwl3aGlsZSAoIShiY20y
ODM1X3JkKGJzLCBCQ00yODM1X1NQSV9DUykgJiBCQ00yODM1X1NQSV9DU19ET05FKSkKKwkJYmNt
MjgzNV93cihicywgQkNNMjgzNV9TUElfQ1MsCisJCQkgICBicy0+Y2xlYXJfcnhfY3NbYnMtPmNo
aXBfc2VsZWN0XSk7CisKKwlicy0+dHhfZG1hX2FjdGl2ZSA9IGZhbHNlOworCXNtcF93bWIoKTsK
KworCS8qCisJICogSW4gY2FzZSBvZiBhIHZlcnkgc2hvcnQgdHJhbnNmZXIsIFJYIERNQSBtYXkg
bm90IGhhdmUgYmVlbgorCSAqIGlzc3VlZCB5ZXQuICBUaGUgb251cyBpcyB0aGVuIG9uIGJjbTI4
MzVfc3BpX3RyYW5zZmVyX29uZV9kbWEoKQorCSAqIHRvIHRlcm1pbmF0ZSBpdCBpbW1lZGlhdGVs
eSBhZnRlciBpc3N1aW5nLgorCSAqLworCWlmIChjbXB4Y2hnKCZicy0+cnhfZG1hX2FjdGl2ZSwg
dHJ1ZSwgZmFsc2UpKQorCQlkbWFlbmdpbmVfdGVybWluYXRlX2FzeW5jKGN0bHItPmRtYV9yeCk7
CisKKwliY20yODM1X3NwaV91bmRvX3Byb2xvZ3VlKGJzKTsKKwliY20yODM1X3NwaV9yZXNldF9o
dyhjdGxyKTsKKwljb21wbGV0ZSgmY3Rsci0+eGZlcl9jb21wbGV0aW9uKTsKK30KKworLyoqCisg
KiBiY20yODM1X3NwaV9wcmVwYXJlX3NnKCkgLSBwcmVwYXJlIGFuZCBzdWJtaXQgRE1BIGRlc2Ny
aXB0b3IgZm9yIHNnbGlzdAorICogQGN0bHI6IFNQSSBtYXN0ZXIgY29udHJvbGxlcgorICogQHNw
aTogU1BJIHNsYXZlCisgKiBAdGZyOiBTUEkgdHJhbnNmZXIKKyAqIEBiczogQkNNMjgzNSBTUEkg
Y29udHJvbGxlcgorICogQGlzX3R4OiB3aGV0aGVyIHRvIHN1Ym1pdCBETUEgZGVzY3JpcHRvciBm
b3IgVFggb3IgUlggc2dsaXN0CisgKgorICogUHJlcGFyZSBhbmQgc3VibWl0IGEgRE1BIGRlc2Ny
aXB0b3IgZm9yIHRoZSBUWCBvciBSWCBzZ2xpc3Qgb2YgQHRmci4KKyAqIFJldHVybiAwIG9uIHN1
Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBlcnJvciBudW1iZXIuCisgKi8KIHN0YXRpYyBpbnQgYmNtMjgz
NV9zcGlfcHJlcGFyZV9zZyhzdHJ1Y3Qgc3BpX2NvbnRyb2xsZXIgKmN0bHIsCisJCQkJICBzdHJ1
Y3Qgc3BpX2RldmljZSAqc3BpLAogCQkJCSAgc3RydWN0IHNwaV90cmFuc2ZlciAqdGZyLAorCQkJ
CSAgc3RydWN0IGJjbTI4MzVfc3BpICpicywKIAkJCQkgIGJvb2wgaXNfdHgpCiB7CiAJc3RydWN0
IGRtYV9jaGFuICpjaGFuOwpAQCAtNTk1LDggKzY2NSw3IEBAIHN0YXRpYyBpbnQgYmNtMjgzNV9z
cGlfcHJlcGFyZV9zZyhzdHJ1Y3Qgc3BpX2NvbnRyb2xsZXIgKmN0bHIsCiAJCWNoYW4gID0gY3Rs
ci0+ZG1hX3R4OwogCQluZW50cyA9IHRmci0+dHhfc2cubmVudHM7CiAJCXNnbCAgID0gdGZyLT50
eF9zZy5zZ2w7Ci0JCWZsYWdzID0gMCAvKiBubyAgdHggaW50ZXJydXB0ICovOwotCisJCWZsYWdz
ID0gdGZyLT5yeF9idWYgPyAwIDogRE1BX1BSRVBfSU5URVJSVVBUOwogCX0gZWxzZSB7CiAJCWRp
ciAgID0gRE1BX0RFVl9UT19NRU07CiAJCWNoYW4gID0gY3Rsci0+ZG1hX3J4OwpAQCAtNjA5LDEw
ICs2NzgsMTcgQEAgc3RhdGljIGludCBiY20yODM1X3NwaV9wcmVwYXJlX3NnKHN0cnVjdCBzcGlf
Y29udHJvbGxlciAqY3RsciwKIAlpZiAoIWRlc2MpCiAJCXJldHVybiAtRUlOVkFMOwogCi0JLyog
c2V0IGNhbGxiYWNrIGZvciByeCAqLworCS8qCisJICogQ29tcGxldGlvbiBpcyBzaWduYWxlZCBi
eSB0aGUgUlggY2hhbm5lbCBmb3IgYmlkaXJlY3Rpb25hbCBhbmQKKwkgKiBSWC1vbmx5IHRyYW5z
ZmVyczsgZWxzZSBieSB0aGUgVFggY2hhbm5lbCBmb3IgVFgtb25seSB0cmFuc2ZlcnMuCisJICov
CiAJaWYgKCFpc190eCkgewotCQlkZXNjLT5jYWxsYmFjayA9IGJjbTI4MzVfc3BpX2RtYV9kb25l
OworCQlkZXNjLT5jYWxsYmFjayA9IGJjbTI4MzVfc3BpX2RtYV9yeF9kb25lOworCQlkZXNjLT5j
YWxsYmFja19wYXJhbSA9IGN0bHI7CisJfSBlbHNlIGlmICghdGZyLT5yeF9idWYpIHsKKwkJZGVz
Yy0+Y2FsbGJhY2sgPSBiY20yODM1X3NwaV9kbWFfdHhfZG9uZTsKIAkJZGVzYy0+Y2FsbGJhY2tf
cGFyYW0gPSBjdGxyOworCQlicy0+Y2hpcF9zZWxlY3QgPSBzcGktPmNoaXBfc2VsZWN0OwogCX0K
IAogCS8qIHN1Ym1pdCBpdCB0byBETUEtZW5naW5lICovCkBAIC02MjEsMTIgKzY5Nyw0MiBAQCBz
dGF0aWMgaW50IGJjbTI4MzVfc3BpX3ByZXBhcmVfc2coc3RydWN0IHNwaV9jb250cm9sbGVyICpj
dGxyLAogCXJldHVybiBkbWFfc3VibWl0X2Vycm9yKGNvb2tpZSk7CiB9CiAKKy8qKgorICogYmNt
MjgzNV9zcGlfdHJhbnNmZXJfb25lX2RtYSgpIC0gcGVyZm9ybSBTUEkgdHJhbnNmZXIgdXNpbmcg
RE1BIGVuZ2luZQorICogQGN0bHI6IFNQSSBtYXN0ZXIgY29udHJvbGxlcgorICogQHNwaTogU1BJ
IHNsYXZlCisgKiBAdGZyOiBTUEkgdHJhbnNmZXIKKyAqIEBjczogQ1MgcmVnaXN0ZXIKKyAqCisg
KiBGb3IgKmJpZGlyZWN0aW9uYWwqIHRyYW5zZmVycyAoYm90aCB0eF9idWYgYW5kIHJ4X2J1ZiBh
cmUgbm9uLSVOVUxMKSwgc2V0IHVwCisgKiB0aGUgVFggYW5kIFJYIERNQSBjaGFubmVsIHRvIGNv
cHkgYmV0d2VlbiBtZW1vcnkgYW5kIEZJRk8gcmVnaXN0ZXIuCisgKgorICogRm9yICpUWC1vbmx5
KiB0cmFuc2ZlcnMgKHJ4X2J1ZiBpcyAlTlVMTCksIGNvcHlpbmcgdGhlIFJYIEZJRk8ncyBjb250
ZW50cyB0bworICogbWVtb3J5IGlzIHBvaW50bGVzcy4gIEhvd2V2ZXIgbm90IHJlYWRpbmcgdGhl
IFJYIEZJRk8gaXNuJ3QgYW4gb3B0aW9uIGVpdGhlcgorICogYmVjYXVzZSB0cmFuc21pc3Npb24g
aXMgaGFsdGVkIG9uY2UgaXQncyBmdWxsLiAgQXMgYSB3b3JrYXJvdW5kLCBjeWNsaWNhbGx5Cisg
KiBjbGVhciB0aGUgUlggRklGTyBieSBzZXR0aW5nIHRoZSBDTEVBUl9SWCBiaXQgaW4gdGhlIENT
IHJlZ2lzdGVyLgorICoKKyAqIFRoZSBDUyByZWdpc3RlciB2YWx1ZSBpcyBwcmVjYWxjdWxhdGVk
IGluIGJjbTI4MzVfc3BpX3NldHVwKCkuICBOb3JtYWxseQorICogdGhpcyBpcyBjYWxsZWQgb25s
eSBvbmNlLCBvbiBzbGF2ZSByZWdpc3RyYXRpb24uICBBIERNQSBkZXNjcmlwdG9yIHRvIHdyaXRl
CisgKiB0aGlzIHZhbHVlIGlzIHByZWFsbG9jYXRlZCBpbiBiY20yODM1X2RtYV9pbml0KCkuICBB
bGwgdGhhdCdzIGxlZnQgdG8gZG8KKyAqIHdoZW4gcGVyZm9ybWluZyBhIFRYLW9ubHkgdHJhbnNm
ZXIgaXMgdG8gc3VibWl0IHRoaXMgZGVzY3JpcHRvciB0byB0aGUgUlgKKyAqIERNQSBjaGFubmVs
LiAgTGF0ZW5jeSBpcyB0aGVyZWJ5IG1pbmltaXplZC4gIFRoZSBkZXNjcmlwdG9yIGRvZXMgbm90
CisgKiBnZW5lcmF0ZSBhbnkgaW50ZXJydXB0cyB3aGlsZSBydW5uaW5nLiAgSXQgbXVzdCBiZSB0
ZXJtaW5hdGVkIG9uY2UgdGhlCisgKiBUWCBETUEgY2hhbm5lbCBpcyBkb25lLgorICoKKyAqIENs
ZWFyaW5nIHRoZSBSWCBGSUZPIGlzIHBhY2VkIGJ5IHRoZSBEUkVRIHNpZ25hbC4gIFRoZSBzaWdu
YWwgaXMgYXNzZXJ0ZWQKKyAqIHdoZW4gdGhlIFJYIEZJRk8gYmVjb21lcyBoYWxmIGZ1bGwsIGku
ZS4gMzIgYnl0ZXMuICAoVHVuZWFibGUgd2l0aCB0aGUgREMKKyAqIHJlZ2lzdGVyLikgIFJlYWRp
bmcgMzIgYnl0ZXMgZnJvbSB0aGUgUlggRklGTyB3b3VsZCBub3JtYWxseSByZXF1aXJlIDggYnVz
CisgKiBhY2Nlc3Nlcywgd2hlcmVhcyBjbGVhcmluZyBpdCByZXF1aXJlcyBvbmx5IDEgYnVzIGFj
Y2Vzcy4gIFNvIGFuIDgtZm9sZAorICogcmVkdWN0aW9uIGluIGJ1cyB0cmFmZmljIGFuZCB0aHVz
IGVuZXJneSBjb25zdW1wdGlvbiBpcyBhY2hpZXZlZC4KKyAqLwogc3RhdGljIGludCBiY20yODM1
X3NwaV90cmFuc2Zlcl9vbmVfZG1hKHN0cnVjdCBzcGlfY29udHJvbGxlciAqY3RsciwKIAkJCQkJ
c3RydWN0IHNwaV9kZXZpY2UgKnNwaSwKIAkJCQkJc3RydWN0IHNwaV90cmFuc2ZlciAqdGZyLAog
CQkJCQl1MzIgY3MpCiB7CiAJc3RydWN0IGJjbTI4MzVfc3BpICpicyA9IHNwaV9jb250cm9sbGVy
X2dldF9kZXZkYXRhKGN0bHIpOworCWRtYV9jb29raWVfdCBjb29raWU7CiAJaW50IHJldDsKIAog
CS8qIHVwZGF0ZSB1c2FnZSBzdGF0aXN0aWNzICovCkBAIC02MzksMTMgKzc0NSwxMCBAQCBzdGF0
aWMgaW50IGJjbTI4MzVfc3BpX3RyYW5zZmVyX29uZV9kbWEoc3RydWN0IHNwaV9jb250cm9sbGVy
ICpjdGxyLAogCWJjbTI4MzVfc3BpX3RyYW5zZmVyX3Byb2xvZ3VlKGN0bHIsIHRmciwgYnMsIGNz
KTsKIAogCS8qIHNldHVwIHR4LURNQSAqLwotCXJldCA9IGJjbTI4MzVfc3BpX3ByZXBhcmVfc2co
Y3RsciwgdGZyLCB0cnVlKTsKKwlyZXQgPSBiY20yODM1X3NwaV9wcmVwYXJlX3NnKGN0bHIsIHNw
aSwgdGZyLCBicywgdHJ1ZSk7CiAJaWYgKHJldCkKIAkJZ290byBlcnJfcmVzZXRfaHc7CiAKLQkv
KiBzdGFydCBUWCBlYXJseSAqLwotCWRtYV9hc3luY19pc3N1ZV9wZW5kaW5nKGN0bHItPmRtYV90
eCk7Ci0KIAkvKiBzZXQgdGhlIERNQSBsZW5ndGggKi8KIAliY20yODM1X3dyKGJzLCBCQ00yODM1
X1NQSV9ETEVOLCBicy0+dHhfbGVuKTsKIApAQCAtNjUzLDE5ICs3NTYsNDMgQEAgc3RhdGljIGlu
dCBiY20yODM1X3NwaV90cmFuc2Zlcl9vbmVfZG1hKHN0cnVjdCBzcGlfY29udHJvbGxlciAqY3Rs
ciwKIAliY20yODM1X3dyKGJzLCBCQ00yODM1X1NQSV9DUywKIAkJICAgY3MgfCBCQ00yODM1X1NQ
SV9DU19UQSB8IEJDTTI4MzVfU1BJX0NTX0RNQUVOKTsKIAorCWJzLT50eF9kbWFfYWN0aXZlID0g
dHJ1ZTsKKwlzbXBfd21iKCk7CisKKwkvKiBzdGFydCBUWCBlYXJseSAqLworCWRtYV9hc3luY19p
c3N1ZV9wZW5kaW5nKGN0bHItPmRtYV90eCk7CisKIAkvKiBzZXR1cCByeC1ETUEgbGF0ZSAtIHRv
IHJ1biB0cmFuc2ZlcnMgd2hpbGUKIAkgKiBtYXBwaW5nIG9mIHRoZSByeCBidWZmZXJzIHN0aWxs
IHRha2VzIHBsYWNlCiAJICogdGhpcyBzYXZlcyAxMHVzIG9yIG1vcmUuCiAJICovCi0JcmV0ID0g
YmNtMjgzNV9zcGlfcHJlcGFyZV9zZyhjdGxyLCB0ZnIsIGZhbHNlKTsKKwlpZiAoYnMtPnJ4X2J1
ZikgeworCQlyZXQgPSBiY20yODM1X3NwaV9wcmVwYXJlX3NnKGN0bHIsIHNwaSwgdGZyLCBicywg
ZmFsc2UpOworCX0gZWxzZSB7CisJCWNvb2tpZSA9IGRtYWVuZ2luZV9zdWJtaXQoYnMtPmNsZWFy
X3J4X2Rlc2Nbc3BpLT5jaGlwX3NlbGVjdF0pOworCQlyZXQgPSBkbWFfc3VibWl0X2Vycm9yKGNv
b2tpZSk7CisJfQogCWlmIChyZXQpIHsKIAkJLyogbmVlZCB0byByZXNldCBvbiBlcnJvcnMgKi8K
IAkJZG1hZW5naW5lX3Rlcm1pbmF0ZV9zeW5jKGN0bHItPmRtYV90eCk7CisJCWJzLT50eF9kbWFf
YWN0aXZlID0gZmFsc2U7CiAJCWdvdG8gZXJyX3Jlc2V0X2h3OwogCX0KIAogCS8qIHN0YXJ0IHJ4
IGRtYSBsYXRlICovCiAJZG1hX2FzeW5jX2lzc3VlX3BlbmRpbmcoY3Rsci0+ZG1hX3J4KTsKKwli
cy0+cnhfZG1hX2FjdGl2ZSA9IHRydWU7CisJc21wX21iKCk7CisKKwkvKgorCSAqIEluIGNhc2Ug
b2YgYSB2ZXJ5IHNob3J0IFRYLW9ubHkgdHJhbnNmZXIsIGJjbTI4MzVfc3BpX2RtYV90eF9kb25l
KCkKKwkgKiBtYXkgcnVuIGJlZm9yZSBSWCBETUEgaXMgaXNzdWVkLiAgVGVybWluYXRlIFJYIERN
QSBpZiBzby4KKwkgKi8KKwlpZiAoIWJzLT5yeF9idWYgJiYgIWJzLT50eF9kbWFfYWN0aXZlICYm
CisJICAgIGNtcHhjaGcoJmJzLT5yeF9kbWFfYWN0aXZlLCB0cnVlLCBmYWxzZSkpIHsKKwkJZG1h
ZW5naW5lX3Rlcm1pbmF0ZV9hc3luYyhjdGxyLT5kbWFfcngpOworCQliY20yODM1X3NwaV9yZXNl
dF9odyhjdGxyKTsKKwl9CiAKIAkvKiB3YWl0IGZvciB3YWtldXAgaW4gZnJhbWV3b3JrICovCiAJ
cmV0dXJuIDE7CkBAIC02ODgsMjYgKzgxNSw0MiBAQCBzdGF0aWMgYm9vbCBiY20yODM1X3NwaV9j
YW5fZG1hKHN0cnVjdCBzcGlfY29udHJvbGxlciAqY3RsciwKIAlyZXR1cm4gdHJ1ZTsKIH0KIAot
c3RhdGljIHZvaWQgYmNtMjgzNV9kbWFfcmVsZWFzZShzdHJ1Y3Qgc3BpX2NvbnRyb2xsZXIgKmN0
bHIpCitzdGF0aWMgdm9pZCBiY20yODM1X2RtYV9yZWxlYXNlKHN0cnVjdCBzcGlfY29udHJvbGxl
ciAqY3RsciwKKwkJCQlzdHJ1Y3QgYmNtMjgzNV9zcGkgKmJzKQogeworCWludCBpOworCiAJaWYg
KGN0bHItPmRtYV90eCkgewogCQlkbWFlbmdpbmVfdGVybWluYXRlX3N5bmMoY3Rsci0+ZG1hX3R4
KTsKIAkJZG1hX3JlbGVhc2VfY2hhbm5lbChjdGxyLT5kbWFfdHgpOwogCQljdGxyLT5kbWFfdHgg
PSBOVUxMOwogCX0KKwogCWlmIChjdGxyLT5kbWFfcngpIHsKIAkJZG1hZW5naW5lX3Rlcm1pbmF0
ZV9zeW5jKGN0bHItPmRtYV9yeCk7CisKKwkJZm9yIChpID0gMDsgaSA8IEJDTTI4MzVfU1BJX05V
TV9DUzsgaSsrKQorCQkJaWYgKGJzLT5jbGVhcl9yeF9kZXNjW2ldKQorCQkJCWRtYWVuZ2luZV9k
ZXNjX2ZyZWUoYnMtPmNsZWFyX3J4X2Rlc2NbaV0pOworCisJCWlmIChicy0+Y2xlYXJfcnhfYWRk
cikKKwkJCWRtYV91bm1hcF9zaW5nbGUoY3Rsci0+ZG1hX3J4LT5kZXZpY2UtPmRldiwKKwkJCQkJ
IGJzLT5jbGVhcl9yeF9hZGRyLAorCQkJCQkgc2l6ZW9mKGJzLT5jbGVhcl9yeF9jcyksCisJCQkJ
CSBETUFfVE9fREVWSUNFKTsKKwogCQlkbWFfcmVsZWFzZV9jaGFubmVsKGN0bHItPmRtYV9yeCk7
CiAJCWN0bHItPmRtYV9yeCA9IE5VTEw7CiAJfQogfQogCi1zdGF0aWMgdm9pZCBiY20yODM1X2Rt
YV9pbml0KHN0cnVjdCBzcGlfY29udHJvbGxlciAqY3Rsciwgc3RydWN0IGRldmljZSAqZGV2KQor
c3RhdGljIHZvaWQgYmNtMjgzNV9kbWFfaW5pdChzdHJ1Y3Qgc3BpX2NvbnRyb2xsZXIgKmN0bHIs
IHN0cnVjdCBkZXZpY2UgKmRldiwKKwkJCSAgICAgc3RydWN0IGJjbTI4MzVfc3BpICpicykKIHsK
IAlzdHJ1Y3QgZG1hX3NsYXZlX2NvbmZpZyBzbGF2ZV9jb25maWc7CiAJY29uc3QgX19iZTMyICph
ZGRyOwogCWRtYV9hZGRyX3QgZG1hX3JlZ19iYXNlOwotCWludCByZXQ7CisJaW50IHJldCwgaTsK
IAogCS8qIGJhc2UgYWRkcmVzcyBpbiBkbWEtc3BhY2UgKi8KIAlhZGRyID0gb2ZfZ2V0X2FkZHJl
c3MoY3Rsci0+ZGV2Lm9mX25vZGUsIDAsIE5VTEwsIE5VTEwpOwpAQCAtNzM3LDE3ICs4ODAsNTEg
QEAgc3RhdGljIHZvaWQgYmNtMjgzNV9kbWFfaW5pdChzdHJ1Y3Qgc3BpX2NvbnRyb2xsZXIgKmN0
bHIsIHN0cnVjdCBkZXZpY2UgKmRldikKIAlpZiAocmV0KQogCQlnb3RvIGVycl9jb25maWc7CiAK
KwkvKgorCSAqIFRoZSBSWCBETUEgY2hhbm5lbCBpcyB1c2VkIGJpZGlyZWN0aW9uYWxseTogIEl0
IGVpdGhlciByZWFkcyB0aGUKKwkgKiBSWCBGSUZPIG9yLCBpbiBjYXNlIG9mIGEgVFgtb25seSB0
cmFuc2ZlciwgY3ljbGljYWxseSB3cml0ZXMgYQorCSAqIHByZWNhbGN1bGF0ZWQgdmFsdWUgdG8g
dGhlIENTIHJlZ2lzdGVyIHRvIGNsZWFyIHRoZSBSWCBGSUZPLgorCSAqLwogCXNsYXZlX2NvbmZp
Zy5zcmNfYWRkciA9ICh1MzIpKGRtYV9yZWdfYmFzZSArIEJDTTI4MzVfU1BJX0ZJRk8pOwogCXNs
YXZlX2NvbmZpZy5zcmNfYWRkcl93aWR0aCA9IERNQV9TTEFWRV9CVVNXSURUSF80X0JZVEVTOwor
CXNsYXZlX2NvbmZpZy5kc3RfYWRkciA9ICh1MzIpKGRtYV9yZWdfYmFzZSArIEJDTTI4MzVfU1BJ
X0NTKTsKKwlzbGF2ZV9jb25maWcuZHN0X2FkZHJfd2lkdGggPSBETUFfU0xBVkVfQlVTV0lEVEhf
NF9CWVRFUzsKIAogCXJldCA9IGRtYWVuZ2luZV9zbGF2ZV9jb25maWcoY3Rsci0+ZG1hX3J4LCAm
c2xhdmVfY29uZmlnKTsKIAlpZiAocmV0KQogCQlnb3RvIGVycl9jb25maWc7CiAKKwlicy0+Y2xl
YXJfcnhfYWRkciA9IGRtYV9tYXBfc2luZ2xlKGN0bHItPmRtYV9yeC0+ZGV2aWNlLT5kZXYsCisJ
CQkJCSAgIGJzLT5jbGVhcl9yeF9jcywKKwkJCQkJICAgc2l6ZW9mKGJzLT5jbGVhcl9yeF9jcyks
CisJCQkJCSAgIERNQV9UT19ERVZJQ0UpOworCWlmIChkbWFfbWFwcGluZ19lcnJvcihjdGxyLT5k
bWFfcngtPmRldmljZS0+ZGV2LCBicy0+Y2xlYXJfcnhfYWRkcikpIHsKKwkJZGV2X2VycihkZXYs
ICJjYW5ub3QgbWFwIGNsZWFyX3J4X2NzIC0gbm90IHVzaW5nIERNQSBtb2RlXG4iKTsKKwkJYnMt
PmNsZWFyX3J4X2FkZHIgPSAwOworCQlnb3RvIGVycl9yZWxlYXNlOworCX0KKworCWZvciAoaSA9
IDA7IGkgPCBCQ00yODM1X1NQSV9OVU1fQ1M7IGkrKykgeworCQlicy0+Y2xlYXJfcnhfZGVzY1tp
XSA9IGRtYWVuZ2luZV9wcmVwX2RtYV9jeWNsaWMoY3Rsci0+ZG1hX3J4LAorCQkJCQkgICBicy0+
Y2xlYXJfcnhfYWRkciArIGkgKiBzaXplb2YodTMyKSwKKwkJCQkJICAgc2l6ZW9mKHUzMiksIDAs
CisJCQkJCSAgIERNQV9NRU1fVE9fREVWLCAwKTsKKwkJaWYgKCFicy0+Y2xlYXJfcnhfZGVzY1tp
XSkgeworCQkJZGV2X2VycihkZXYsICJjYW5ub3QgcHJlcGFyZSBjbGVhcl9yeF9kZXNjIC0gbm90
IHVzaW5nIERNQSBtb2RlXG4iKTsKKwkJCWdvdG8gZXJyX3JlbGVhc2U7CisJCX0KKworCQlyZXQg
PSBkbWFlbmdpbmVfZGVzY19zZXRfcmV1c2UoYnMtPmNsZWFyX3J4X2Rlc2NbaV0pOworCQlpZiAo
cmV0KSB7CisJCQlkZXZfZXJyKGRldiwgImNhbm5vdCByZXVzZSBjbGVhcl9yeF9kZXNjIC0gbm90
IHVzaW5nIERNQSBtb2RlXG4iKTsKKwkJCWdvdG8gZXJyX3JlbGVhc2U7CisJCX0KKwl9CisKIAkv
KiBhbGwgd2VudCB3ZWxsLCBzbyBzZXQgY2FuX2RtYSAqLwogCWN0bHItPmNhbl9kbWEgPSBiY20y
ODM1X3NwaV9jYW5fZG1hOwotCS8qIG5lZWQgdG8gZG8gVFggQU5EIFJYIERNQSwgc28gd2UgbmVl
ZCBkdW1teSBidWZmZXJzICovCi0JY3Rsci0+ZmxhZ3MgPSBTUElfQ09OVFJPTExFUl9NVVNUX1JY
IHwgU1BJX0NPTlRST0xMRVJfTVVTVF9UWDsKKwkvKiBuZWVkIHRvIGRvIFRYIERNQSwgc28gd2Ug
bmVlZCBhIGR1bW15IGJ1ZmZlciAqLworCWN0bHItPmZsYWdzID0gU1BJX0NPTlRST0xMRVJfTVVT
VF9UWDsKIAogCXJldHVybjsKIApAQCAtNzU1LDcgKzkzMiw3IEBAIHN0YXRpYyB2b2lkIGJjbTI4
MzVfZG1hX2luaXQoc3RydWN0IHNwaV9jb250cm9sbGVyICpjdGxyLCBzdHJ1Y3QgZGV2aWNlICpk
ZXYpCiAJZGV2X2VycihkZXYsICJpc3N1ZSBjb25maWd1cmluZyBkbWE6ICVkIC0gbm90IHVzaW5n
IERNQSBtb2RlXG4iLAogCQlyZXQpOwogZXJyX3JlbGVhc2U6Ci0JYmNtMjgzNV9kbWFfcmVsZWFz
ZShjdGxyKTsKKwliY20yODM1X2RtYV9yZWxlYXNlKGN0bHIsIGJzKTsKIGVycjoKIAlyZXR1cm47
CiB9CkBAIC04NDQsOCArMTAyMSw3IEBAIHN0YXRpYyBpbnQgYmNtMjgzNV9zcGlfdHJhbnNmZXJf
b25lKHN0cnVjdCBzcGlfY29udHJvbGxlciAqY3RsciwKIAliY20yODM1X3dyKGJzLCBCQ00yODM1
X1NQSV9DTEssIGNkaXYpOwogCiAJLyogaGFuZGxlIGFsbCB0aGUgMy13aXJlIG1vZGUgKi8KLQlp
ZiAoc3BpLT5tb2RlICYgU1BJXzNXSVJFICYmIHRmci0+cnhfYnVmICYmCi0JICAgIHRmci0+cnhf
YnVmICE9IGN0bHItPmR1bW15X3J4KQorCWlmIChzcGktPm1vZGUgJiBTUElfM1dJUkUgJiYgdGZy
LT5yeF9idWYpCiAJCWNzIHw9IEJDTTI4MzVfU1BJX0NTX1JFTjsKIAogCS8qIHNldCB0cmFuc21p
dCBidWZmZXJzIGFuZCBsZW5ndGggKi8KQEAgLTkxMyw3ICsxMDg5LDkgQEAgc3RhdGljIHZvaWQg
YmNtMjgzNV9zcGlfaGFuZGxlX2VycihzdHJ1Y3Qgc3BpX2NvbnRyb2xsZXIgKmN0bHIsCiAKIAkv
KiBpZiBhbiBlcnJvciBvY2N1cnJlZCBhbmQgd2UgaGF2ZSBhbiBhY3RpdmUgZG1hLCB0aGVuIHRl
cm1pbmF0ZSAqLwogCWRtYWVuZ2luZV90ZXJtaW5hdGVfc3luYyhjdGxyLT5kbWFfdHgpOworCWJz
LT50eF9kbWFfYWN0aXZlID0gZmFsc2U7CiAJZG1hZW5naW5lX3Rlcm1pbmF0ZV9zeW5jKGN0bHIt
PmRtYV9yeCk7CisJYnMtPnJ4X2RtYV9hY3RpdmUgPSBmYWxzZTsKIAliY20yODM1X3NwaV91bmRv
X3Byb2xvZ3VlKGJzKTsKIAogCS8qIGFuZCByZXNldCAqLwpAQCAtOTI3LDcgKzExMDUsOCBAQCBz
dGF0aWMgaW50IGNoaXBfbWF0Y2hfbmFtZShzdHJ1Y3QgZ3Bpb19jaGlwICpjaGlwLCB2b2lkICpk
YXRhKQogCiBzdGF0aWMgaW50IGJjbTI4MzVfc3BpX3NldHVwKHN0cnVjdCBzcGlfZGV2aWNlICpz
cGkpCiB7Ci0Jc3RydWN0IGJjbTI4MzVfc3BpICpicyA9IHNwaV9jb250cm9sbGVyX2dldF9kZXZk
YXRhKHNwaS0+Y29udHJvbGxlcik7CisJc3RydWN0IHNwaV9jb250cm9sbGVyICpjdGxyID0gc3Bp
LT5jb250cm9sbGVyOworCXN0cnVjdCBiY20yODM1X3NwaSAqYnMgPSBzcGlfY29udHJvbGxlcl9n
ZXRfZGV2ZGF0YShjdGxyKTsKIAlzdHJ1Y3QgZ3Bpb19jaGlwICpjaGlwOwogCWVudW0gZ3Bpb19s
b29rdXBfZmxhZ3MgbGZsYWdzOwogCXUzMiBjczsKQEAgLTk0NSw2ICsxMTI0LDIxIEBAIHN0YXRp
YyBpbnQgYmNtMjgzNV9zcGlfc2V0dXAoc3RydWN0IHNwaV9kZXZpY2UgKnNwaSkKIAkJY3MgfD0g
QkNNMjgzNV9TUElfQ1NfQ1BIQTsKIAlicy0+cHJlcGFyZV9jc1tzcGktPmNoaXBfc2VsZWN0XSA9
IGNzOwogCisJLyoKKwkgKiBQcmVjYWxjdWxhdGUgU1BJIHNsYXZlJ3MgQ1MgcmVnaXN0ZXIgdmFs
dWUgdG8gY2xlYXIgUlggRklGTworCSAqIGluIGNhc2Ugb2YgYSBUWC1vbmx5IERNQSB0cmFuc2Zl
ci4KKwkgKi8KKwlpZiAoY3Rsci0+ZG1hX3J4KSB7CisJCWJzLT5jbGVhcl9yeF9jc1tzcGktPmNo
aXBfc2VsZWN0XSA9IGNzIHwKKwkJCQkJCSAgICBCQ00yODM1X1NQSV9DU19UQSB8CisJCQkJCQkg
ICAgQkNNMjgzNV9TUElfQ1NfRE1BRU4gfAorCQkJCQkJICAgIEJDTTI4MzVfU1BJX0NTX0NMRUFS
X1JYOworCQlkbWFfc3luY19zaW5nbGVfZm9yX2RldmljZShjdGxyLT5kbWFfcngtPmRldmljZS0+
ZGV2LAorCQkJCQkgICBicy0+Y2xlYXJfcnhfYWRkciwKKwkJCQkJICAgc2l6ZW9mKGJzLT5jbGVh
cl9yeF9jcyksCisJCQkJCSAgIERNQV9UT19ERVZJQ0UpOworCX0KKwogCS8qCiAJICogc2FuaXR5
IGNoZWNraW5nIHRoZSBuYXRpdmUtY2hpcHNlbGVjdHMKIAkgKi8KQEAgLTEwMTIsNyArMTIwNiw4
IEBAIHN0YXRpYyBpbnQgYmNtMjgzNV9zcGlfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAq
cGRldikKIAlzdHJ1Y3QgYmNtMjgzNV9zcGkgKmJzOwogCWludCBlcnI7CiAKLQljdGxyID0gc3Bp
X2FsbG9jX21hc3RlcigmcGRldi0+ZGV2LCBzaXplb2YoKmJzKSk7CisJY3RsciA9IHNwaV9hbGxv
Y19tYXN0ZXIoJnBkZXYtPmRldiwgQUxJR04oc2l6ZW9mKCpicyksCisJCQkJCQkgIGRtYV9nZXRf
Y2FjaGVfYWxpZ25tZW50KCkpKTsKIAlpZiAoIWN0bHIpCiAJCXJldHVybiAtRU5PTUVNOwogCkBA
IC0xMDUxLDcgKzEyNDYsNyBAQCBzdGF0aWMgaW50IGJjbTI4MzVfc3BpX3Byb2JlKHN0cnVjdCBw
bGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAKIAljbGtfcHJlcGFyZV9lbmFibGUoYnMtPmNsayk7CiAK
LQliY20yODM1X2RtYV9pbml0KGN0bHIsICZwZGV2LT5kZXYpOworCWJjbTI4MzVfZG1hX2luaXQo
Y3RsciwgJnBkZXYtPmRldiwgYnMpOwogCiAJLyogaW5pdGlhbGlzZSB0aGUgaGFyZHdhcmUgd2l0
aCB0aGUgZGVmYXVsdCBwb2xhcml0aWVzICovCiAJYmNtMjgzNV93cihicywgQkNNMjgzNV9TUElf
Q1MsCkBAIC0xMDk1LDcgKzEyOTAsNyBAQCBzdGF0aWMgaW50IGJjbTI4MzVfc3BpX3JlbW92ZShz
dHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCiAJY2xrX2Rpc2FibGVfdW5wcmVwYXJlKGJz
LT5jbGspOwogCi0JYmNtMjgzNV9kbWFfcmVsZWFzZShjdGxyKTsKKwliY20yODM1X2RtYV9yZWxl
YXNlKGN0bHIsIGJzKTsKIAogCXJldHVybiAwOwogfQotLSAKMi4yMy4wCgoKX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KbGludXgtcnBpLWtlcm5lbCBtYWls
aW5nIGxpc3QKbGludXgtcnBpLWtlcm5lbEBsaXN0cy5pbmZyYWRlYWQub3JnCmh0dHA6Ly9saXN0
cy5pbmZyYWRlYWQub3JnL21haWxtYW4vbGlzdGluZm8vbGludXgtcnBpLWtlcm5lbAo=
